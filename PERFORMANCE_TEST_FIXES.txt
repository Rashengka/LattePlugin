Fix for LattePerformanceBenchmarkTest

Issue:
The cz.hqm.latte.plugin.test.performance.LattePerformanceBenchmarkTest had redundant setUp() calls in all test methods and lacked proper assertions in the testMemoryOptimizationPerformance() method.

Root Cause:
Each test method was explicitly calling setUp() at the beginning, which was redundant because JUnit's @BeforeEach annotation already ensures that the setUp() method is called before each test. The redundant calls could potentially cause issues because they were calling super.setUp() again, which might reinitialize the test environment in an unexpected way. They were also clearing the caches twice, which could affect the performance measurements.

Additionally, the testMemoryOptimizationPerformance() method only logged the memory usage but didn't actually verify that the optimization was working as expected.

Changes Made:

1. Removed redundant setUp() calls from all test methods
   - Removed the explicit setUp() call from testCachingPerformance()
   - Removed the explicit setUp() call from testIncrementalParsingPerformance()
   - Removed the explicit setUp() call from testMemoryOptimizationPerformance()
   - Removed the explicit setUp() call from testCombinedOptimizationsPerformance()

2. Added assertion to testMemoryOptimizationPerformance()
   - Added an assertion to verify that memory optimization doesn't increase memory usage:
     assertTrue("Memory optimization should not increase memory usage", memoryUsedWithOptimization <= memoryUsedWithoutOptimization);

Conclusion:
After making these changes, all tests in LattePerformanceBenchmarkTest are now passing. The test now correctly verifies that the performance optimizations are working as expected, without the potential issues caused by redundant initialization.